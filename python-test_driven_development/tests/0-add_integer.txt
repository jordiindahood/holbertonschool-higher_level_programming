"""
Description: Test add_integer function
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(5, 3)
8

>>> add_integer(0 , -1)
-1

>>> add_integer(5.3 , 3.5)
8

>>> add_integer('5' , 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(1,'a')
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer("a", "f")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(100.3, -2, 10)
Traceback (most recent call last):
    ...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(7,None)
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer(None,5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(max(int),8)
Traceback (most recent call last):
    ...
TypeError: 'type' object is not iterable

"""
