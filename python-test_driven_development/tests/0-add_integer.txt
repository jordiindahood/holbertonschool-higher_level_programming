"""
Description: Test add_integer function
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(6, 3)
9

>>> add_integer(-2, 2)
0

>>> add_integer(7.5, 3)
10

>>> add_integer(3, 5.5)
8

>>> add_integer(3.5, 5.5)
8

>>> add_integer("2", 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(2, "3")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer(1, 2, 3)
Traceback (most recent call last):
    ...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer("-2","3")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
    ....
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(-2, -2)
-4

>>> add_integer(-2, 4.545)
2

>>> add_integer(2)
100

>>> add_integer(-98)
0

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(max(int), 9563878913)
Traceback (most recent call last):
    ....
TypeError: 'type' object is not iterable

>>> add_integer(False, -2)
-2

>>> add_integer(69, True)
70

>>> a = 3
>>> b = -5
>>> add_integer(a, b)
-2

"""